apiVersion: v1
kind: Namespace
metadata:
  name: "{{ fasttext.service.name }}"
  labels:
    name: "{{ fasttext.service.name }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: "{{ fasttext.service.name }}"
  name: "{{ fasttext.service.name }}"
  namespace: "{{ fasttext.service.name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: "{{ fasttext.service.name }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: "{{ fasttext.service.name }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "nvidia.com/gpu.present"
                  operator: In
                  values:
                    - "true"

      containers:
        - command:
            - uvicorn
            - main:app
            - --reload
            - --host
            - 0.0.0.0
          image: registry.{{ local_domain }}/fasttext-server:latest
          name: fasttext
          ports:
            - containerPort: {{ fasttext.service.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: "{{ fasttext.mounts.model.local }}"
              name: model
      restartPolicy: Always
      runtimeClassName: nvidia
      volumes:
        - name: model
          nfs:
            server: "{{ nfs_server_ip }}"
            path: "{{ nfs_root_path }}/{{ fasttext.mounts.model.remote }}"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: "{{ fasttext.service.name }}"
  name: "{{ fasttext.service.name }}"
  namespace: "{{ fasttext.service.name }}"
spec:
  ports:
    - name: "web"
      port: {{ fasttext.service.port }}
      targetPort: {{ fasttext.service.port }}
  selector:
    io.kompose.service: "{{ fasttext.service.name }}"

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: "{{ fasttext.service.name }}"
  namespace: "{{ fasttext.service.name }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    cert-manager.io/cluster-issuer: selfsigned-issuer
spec:
  tls:
    - hosts:
        - {{ fasttext.service.name }}.{{ local_domain }}
      secretName: {{ fasttext.service.name }}-{{ local_domain }}-cert
  rules:
    - host: "{{ fasttext.service.name }}.{{ local_domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ fasttext.service.name }}"
                port:
                  number: {{ fasttext.service.port }}
