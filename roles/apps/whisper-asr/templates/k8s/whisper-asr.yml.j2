apiVersion: v1
kind: Namespace
metadata:
  name: "{{ whisper_asr.service.name }}"
  labels:
    name: "{{ whisper_asr.service.name }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "{{ whisper_asr.service.name }}"
  labels:
    io.kompose.service: "{{ whisper_asr.service.name }}"
  name: "{{ whisper_asr.service.name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: "{{ whisper_asr.service.name }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: "{{ whisper_asr.service.name }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "nvidia.com/gpu.present"
                    operator: In
                    values:
                      - "true"
                  - key: "nvidia.com/gpu.memory"
                    operator: Gt # (greater than)
                    values: ["3072"]

      containers:
        - env:
            - name: ASR_MODEL
              value: {{ whisper_asr.service.model }}
          image: "{{ whisper_asr.service.image }}"
          name: "{{ whisper_asr.service.name }}"
          ports:
            - containerPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: "{{ whisper_asr.mounts.cache.whisper.local }}"
              name: cache-whisper
      restartPolicy: Always
      runtimeClassName: nvidia
      volumes:
        - name: cache-whisper
          nfs:
            server: "{{ nfs_server_ip }}"
            path: "{{ nfs_root_path }}/{{ whisper_asr.mounts.cache.whisper.remote }}"

---
apiVersion: v1
kind: Service
metadata:
  namespace: "{{ whisper_asr.service.name }}"
  annotations:
    kompose.cmd: /usr/local/bin/kompose convert -f docker-compose.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: "{{ whisper_asr.service.name }}"
  name: "{{ whisper_asr.service.name }}"
spec:
  ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
  selector:
    io.kompose.service: "{{ whisper_asr.service.name }}"

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: "{{ whisper_asr.service.name }}"
  namespace: "{{ whisper_asr.service.name }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    cert-manager.io/cluster-issuer: selfsigned-issuer
spec:
  tls:
    - hosts:
        - {{ whisper_asr.service.name }}.{{ local_domain }}
      secretName: {{ whisper_asr.service.name }}-{{ local_domain }}-cert
  rules:
    - host: "{{ whisper_asr.service.name }}.{{ local_domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ whisper_asr.service.name }}"
                port:
                  number: 9000
